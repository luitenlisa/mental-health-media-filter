# -*- coding: utf-8 -*-
"""Hackathon

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16XXNp50zTwX0RvHAC29dvmpVfedNOXzQ
"""

pip install transformers[sentencepiece]

from transformers import pipeline

classifier = pipeline("sentiment-analysis", model="distilbert-base-uncased")

pip install transformers torch

model_name = "nlptown/bert-base-multilingual-uncased-sentiment"



def analyze_text(text):
    inputs = tokenizer(text, return_tensors="pt", truncation=True, padding=True)

    with torch.no_grad():  # No need to compute gradients
        outputs = model(**inputs)

    logits = outputs.logits
    probs = torch.softmax(logits, dim=-1)  # Convert logits to probabilities

    return probs.tolist()  # Convert tensor to list

text = "I'm feeling really down and hopeless today."
result = analyze_text(text)
print("Sentiment scores:", result)

!pip install transformers torch
from transformers import pipeline, AutoTokenizer, AutoModelForSequenceClassification
import torch

model_name = "nlptown/bert-base-multilingual-uncased-sentiment"
# Initialize the tokenizer and model
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForSequenceClassification.from_pretrained(model_name)

def analyze_text(text):
    # Tokenize the input text
    inputs = tokenizer(text, return_tensors="pt", truncation=True, padding=True)

    # Perform inference
    with torch.no_grad():
        outputs = model(**inputs)

    # Extract logits and probabilities
    logits = outputs.logits
    probs = torch.softmax(logits, dim=-1)

    # Return the probabilities as a list
    return probs.tolist()

# Example usage
text = "I'm feeling really down and hopeless today."
result = analyze_text(text)
print("Sentiment scores:", result)

my_text = "I'm feeling really down and hopeless today."
result = analyze_text(my_text)
print("Sentiment scores:", result)

def analyze_text(text):
    # Tokenize and process text
    inputs = tokenizer(text, return_tensors="pt", truncation=True, padding=True)
    with torch.no_grad():
        outputs = model(**inputs)

    # Extract probabilities
    logits = outputs.logits
    probs = torch.softmax(logits, dim=-1).tolist()[0]

    # Define sentiment labels
    sentiment_labels = ["Very Negative", "Negative", "Neutral", "Positive", "Very Positive"]

    # Get the highest probability sentiment
    max_index = probs.index(max(probs))
    sentiment = sentiment_labels[max_index]

    return {"Sentiment": sentiment, "Confidence": probs[max_index]}

# Define trigger words
trigger_words = ["suicide", "self-harm", "panic", "hopeless", "anxious", "trauma", "violence"]

def detect_triggers(text):
    found_triggers = [word for word in trigger_words if word in text.lower()]
    return found_triggers if found_triggers else None

# Example usage
text = "I'm feeling hopeless and overwhelmed."
sentiment_result = analyze_text(text)
trigger_result = detect_triggers(text)

print("Sentiment Analysis:", sentiment_result)
print("Trigger Words Detected:", trigger_result if trigger_result else "None")

pip install streamlit

import streamlit as st

st.title("Mental Health Media Filter")

# User input
user_text = st.text_area("Enter text to analyze:", "")

if st.button("Analyze"):
    sentiment_result = analyze_text(user_text)
    trigger_result = detect_triggers(user_text)

    st.write("### Sentiment Analysis")
    st.write(f"**Sentiment:** {sentiment_result['Sentiment']} ({sentiment_result['Confidence']:.2f})")

    st.write("### Trigger Detection")
    if trigger_result:
        st.write(f"ðŸš¨ **Triggers Found:** {', '.join(trigger_result)}")
    else:
        st.write("âœ… No triggers detected.")

# Run with: streamlit run app.py

from google.colab import drive
drive.mount('/content/drive')

import os
print(os.getcwd())  # Check current directory

os.chdir('/content')  # Replace with your actual folder name
print(os.getcwd())  # Confirm the new working directory

!apt-get install git

!git config --global user.name "luitenlisa"
!git config --global user.email "luitenlisa@gmail.com"

!git clone https://github.com/luitenlisa/mental-health-media-filter.git

!mv /content/Hackathon.ipynb /content/drive/My\ Drive/mental-health-media-filter/