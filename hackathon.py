# -*- coding: utf-8 -*-
"""Hackathon

Automatically generated by Colab.
"""

# Import necessary libraries
from transformers import pipeline, AutoTokenizer, AutoModelForSequenceClassification
import torch
import streamlit as st

# Initialize the tokenizer and model
model_name = "nlptown/bert-base-multilingual-uncased-sentiment"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForSequenceClassification.from_pretrained(model_name)

def analyze_text(text):
    # Tokenize the input text
    inputs = tokenizer(text, return_tensors="pt", truncation=True, padding=True)

    # Perform inference
    with torch.no_grad():
        outputs = model(**inputs)

    # Extract logits and probabilities
    logits = outputs.logits
    probs = torch.softmax(logits, dim=-1)

    # Return the probabilities as a list
    return probs.tolist()

# Define trigger words
trigger_words = ["suicide", "self-harm", "panic", "hopeless", "anxious", "trauma", "violence"]

def detect_triggers(text):
    found_triggers = [word for word in trigger_words if word in text.lower()]
    return found_triggers if found_triggers else None

# Streamlit app title
st.title("Mental Health Media Filter")

# User input
user_text = st.text_area("Enter text to analyze:", "")

if st.button("Analyze"):
    sentiment_result = analyze_text(user_text)
    trigger_result = detect_triggers(user_text)

    st.write("### Sentiment Analysis")
    st.write(f"**Sentiment:** {sentiment_result[0]}")  # Sentiment label

    st.write("### Trigger Detection")
    if trigger_result:
        st.write(f"ðŸš¨ **Triggers Found:** {', '.join(trigger_result)}")
    else:
        st.write("âœ… No triggers detected.")
